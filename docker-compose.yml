version: '3.8'

services:
  hey-orac:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: hey-orac
    privileged: true
    devices:
      - /dev/snd:/dev/snd
    ports:
      - "7171:7171"
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./third_party:/app/third_party
      - ./web:/app/web
      - ./assets:/app/assets
      # TMPFS volumes for temporary data (RAM-based, protects SD card)
      - settings-data:/tmp/settings:rw
      - temp-cache:/tmp/cache:rw
      - temp-sessions:/tmp/sessions:rw
      - temp-uploads:/tmp/uploads:rw
    environment:
      - PYTHONUNBUFFERED=1
      - ALSA_CARD=2
      - ALSA_DEVICE=hw:2,0
      - ALSA_PCM_CARD=2
      - ALSA_PCM_DEVICE=0
      - LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu:$LD_LIBRARY_PATH
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        reservations:
          cpus: '0.5'
          memory: 512M
        limits:
          memory: 1G

volumes:
  logs:
    driver: local
  models:
    driver: local
  third_party:
    driver: local
  web:
    driver: local
  assets:
    driver: local
  # TMPFS volumes (RAM-based, protects SD card)
  settings-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=5M,mode=0777
  temp-cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=50M,mode=0777
  temp-sessions:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=20M,mode=0777
  temp-uploads:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=30M,mode=0777 